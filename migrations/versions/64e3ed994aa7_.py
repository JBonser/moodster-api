"""added team_role table and default data

Revision ID: 64e3ed994aa7
Revises: ca3176d9a9eb
Create Date: 2019-04-27 13:51:37.524643

"""
import uuid
from alembic import op, context
import sqlalchemy as sa
from sqlalchemy.sql import table, column


# revision identifiers, used by Alembic.
revision = '64e3ed994aa7'
down_revision = 'ca3176d9a9eb'
branch_labels = None
depends_on = None


def upgrade():
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'team_role',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('public_id', sa.String(length=100), nullable=False),
        sa.Column('name', sa.String(length=30), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('public_id')
    )
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('team_role')
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    team_role = table(
        'team_role',
        column('id', sa.Integer),
        column('public_id', sa.String),
        column('name', sa.String)
    )
    op.bulk_insert(
        team_role,
        [
            {'id': '1', 'public_id': str(uuid.uuid4()), 'name': 'Admin'},
            {'id': '2', 'public_id': str(uuid.uuid4()), 'name': 'Member'}
        ]
    )


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    op.execute("delete from team_role;")
