"""empty message

Revision ID: 26c44183abd5
Revises: 9ea00075af3f
Create Date: 2019-07-10 22:08:26.666961

"""
from alembic import op, context
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '26c44183abd5'
down_revision = '9ea00075af3f'
branch_labels = None
depends_on = None


def upgrade():
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('team_member_mood',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=False),
    sa.Column('mood_id', sa.Integer(), nullable=True),
    sa.Column('team_member_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['mood_id'], ['mood.id'], ),
    sa.ForeignKeyConstraint(['team_member_id'], ['team_member.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.drop_table('user_mood')
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_mood',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('public_id', sa.VARCHAR(length=100), nullable=False),
    sa.Column('mood_id', sa.INTEGER(), nullable=True),
    sa.Column('team_member_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['mood_id'], ['mood.id'], ),
    sa.ForeignKeyConstraint(['team_member_id'], ['team_member.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.drop_table('team_member_mood')
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
